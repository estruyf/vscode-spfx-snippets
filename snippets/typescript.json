{
  "Resource definition": {
    "prefix": "spfx-locale-ts",
    "body": [
      "declare interface I${1:Resource}Strings {",
      "  ${2:}",
      "}",
      "",
      "declare module '${1:Resource}Strings' {",
      "  const strings: I${1:Resource}Strings;",
      "  export = strings;",
      "}",
      ""
    ],
    "description": "Defines the content to create a new localization definition file."
  },
  "Webpart onInit": {
    "prefix": "spfx-wpinit",
    "body": [
      "protected onInit<T>(): Promise<T> {",
      "  ${1:}",
      "",
      "  return Promise.resolve();",
      "}",
      ""
    ],
    "description": "Defines the web part onInit method."
  },
  "Render component": {
    "prefix": "spfx-render-elm",
    "body": [
      "const element: React.ReactElement<I${1:Component}Props> = React.createElement(",
      "  ${1:Component},",
      "  {",
      "    ${2:}",
      "  }",
      ");",
      "",
      "ReactDom.render(element, this.domElement);"
    ],
    "description": "Adds the code required to create and render a React component."
  },
  "Custom Hook": {
		"prefix": "spfx-hook",
		"body": [
			"import { useState, useEffect } from 'react';",
			"",
			"export default function ${1:useCustom}(options?: any) {",
			"  const [value, setValue] = useState('');",
			"",
			"  useEffect(() => {",
			"    async function fetchData() {",
			"      setValue('');",
			"    }",
			"",
			"    fetchData();",
			"  }, [options]);",
			"",
			"  return {",
			"    value",
			"  };",
			"}"
		],
		"description": "Blueprint to create a custom React hook"
	}
}